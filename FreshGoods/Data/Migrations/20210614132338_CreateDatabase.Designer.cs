// <auto-generated />
using System;
using FreshGoods.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FreshGoods.Data.Migrations
{
    [DbContext(typeof(FreshGoodsDbContext))]
    [Migration("20210614132338_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("FreshGoods.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("FreshGoods.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ImageFileName");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ImagePath = "fruit-02.jpeg",
                            ItemName = "Dragon Fruit",
                            Price = 3.59m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            ImagePath = "meat-1.jpeg",
                            ItemName = "Beef Ossobuco",
                            Price = 15.99m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            ImagePath = "veg-12.jpeg",
                            ItemName = "Mix Peppers",
                            Price = 4.99m,
                            Quantity = 1,
                            Unit = "Pack"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            ImagePath = "bakt-1.jpeg",
                            ItemName = "Sourdough Bread",
                            Price = 7.99m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            ImagePath = "fruit-1.jpeg",
                            ItemName = "Wild Orange",
                            Price = 3.99m,
                            Quantity = 1,
                            Unit = "Dozen"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            ImagePath = "fruit-03.jpeg",
                            ItemName = "Papaya Mex",
                            Price = 3.99m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            ImagePath = "fruit-04.jpeg",
                            ItemName = "Hass Avocado",
                            Price = 5.69m,
                            Quantity = 1,
                            Unit = "Dozen"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            ImagePath = "fruit-05.jpeg",
                            ItemName = "Fiji Cocunut",
                            Price = 3.29m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            ImagePath = "fruit-06.jpeg",
                            ItemName = "Concord Grape",
                            Price = 4.49m,
                            Quantity = 1,
                            Unit = "Pack"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            ImagePath = "fruit-07.jpeg",
                            ItemName = "Red Cherry",
                            Price = 5.29m,
                            Quantity = 1,
                            Unit = "Pack"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            ImagePath = "fruit-08.jpeg",
                            ItemName = "Gala Apple",
                            Price = 3.99m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            ImagePath = "fruit-09.jpeg",
                            ItemName = "Red strawberry",
                            Price = 3.49m,
                            Quantity = 1,
                            Unit = "Pack"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 1,
                            ImagePath = "fruit-10.jpeg",
                            ItemName = "Wild Blackberry",
                            Price = 5.99m,
                            Quantity = 1,
                            Unit = "Pack"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 1,
                            ImagePath = "fruit-11.jpeg",
                            ItemName = "Green Kiwi",
                            Price = 2.49m,
                            Quantity = 1,
                            Unit = "Dozen"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            ImagePath = "fruit-12.jpeg",
                            ItemName = "Musk Melon",
                            Price = 2.99m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 1,
                            ImagePath = "fruit-13.jpeg",
                            ItemName = "Golden Pineapple",
                            Price = 3.49m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 1,
                            ImagePath = "fruit-14.jpeg",
                            ItemName = "Watermelon",
                            Price = 5.49m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 1,
                            ImagePath = "fruit-15.jpeg",
                            ItemName = "Semillon Grape",
                            Price = 3.49m,
                            Quantity = 1,
                            Unit = "Pack"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 1,
                            ImagePath = "fruit-16.jpeg",
                            ItemName = "Cavendish Banana",
                            Price = 1.49m,
                            Quantity = 1,
                            Unit = "Pack"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 2,
                            ImagePath = "meat-02.jpeg",
                            ItemName = "Pork Ribeye",
                            Price = 11.99m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 2,
                            ImagePath = "meat-03.jpeg",
                            ItemName = "Smoked Bacon",
                            Price = 13.29m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 2,
                            ImagePath = "meat-04.jpeg",
                            ItemName = "Dry Aged Bacon",
                            Price = 25.69m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 2,
                            ImagePath = "meat-05.jpeg",
                            ItemName = "Pork Belly",
                            Price = 9.99m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 2,
                            ImagePath = "meat-06.jpeg",
                            ItemName = "Seasoned Pork",
                            Price = 14.49m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 2,
                            ImagePath = "meat-07.jpeg",
                            ItemName = "Pork Shoulder",
                            Price = 10.29m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 2,
                            ImagePath = "meat-08.jpeg",
                            ItemName = "Cured Sausage",
                            Price = 13.99m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 2,
                            ImagePath = "meat-09.jpeg",
                            ItemName = "Picanha Sirloin",
                            Price = 11.49m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 2,
                            ImagePath = "meat-10.jpeg",
                            ItemName = "Italian Sausage",
                            Price = 15.89m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 2,
                            ImagePath = "meat-11.jpeg",
                            ItemName = "Ribeye Steak",
                            Price = 22.49m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 2,
                            ImagePath = "meat-12.jpeg",
                            ItemName = "Veal Skewer",
                            Price = 2.99m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 2,
                            ImagePath = "meat-13.jpeg",
                            ItemName = "German Sausage",
                            Price = 23.49m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 2,
                            ImagePath = "meat-14.jpeg",
                            ItemName = "Spicy Bacon",
                            Price = 15.49m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 2,
                            ImagePath = "meat-15.jpeg",
                            ItemName = "Veal Ossobuco",
                            Price = 13.49m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 2,
                            ImagePath = "meat-16.jpeg",
                            ItemName = "Spicy Sausage",
                            Price = 21.49m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 3,
                            ImagePath = "veg-02.jpeg",
                            ItemName = "Fresh Cabbage",
                            Price = 3.99m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 3,
                            ImagePath = "veg-03.jpeg",
                            ItemName = "Cherry Tomato",
                            Price = 3.29m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 3,
                            ImagePath = "veg-04.jpeg",
                            ItemName = "Acorn Squash",
                            Price = 3.69m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 3,
                            ImagePath = "veg-05.jpeg",
                            ItemName = "Broccoli",
                            Price = 2.99m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 3,
                            ImagePath = "veg-06.jpeg",
                            ItemName = "Curly Lettuce",
                            Price = 3.49m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 3,
                            ImagePath = "veg-07.jpeg",
                            ItemName = "Aspargus",
                            Price = 2.29m,
                            Quantity = 1,
                            Unit = "Pack"
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 3,
                            ImagePath = "veg-08.jpeg",
                            ItemName = "Mini Eggplant",
                            Price = 3.99m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 3,
                            ImagePath = "veg-09.jpeg",
                            ItemName = "Pumpkin",
                            Price = 5.49m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 3,
                            ImagePath = "veg-10.jpeg",
                            ItemName = "Farm Carrots",
                            Price = 5.89m,
                            Quantity = 1,
                            Unit = "Pack"
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 3,
                            ImagePath = "veg-11.jpeg",
                            ItemName = "Green Pepper",
                            Price = 2.49m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 3,
                            ImagePath = "veg-1.jpeg",
                            ItemName = "Sweet Pepers",
                            Price = 7.99m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 3,
                            ImagePath = "veg-13.jpeg",
                            ItemName = "White Onion",
                            Price = 2.49m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = 3,
                            ImagePath = "veg-14.jpeg",
                            ItemName = "Sweet Corn",
                            Price = 3.29m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 48,
                            CategoryId = 3,
                            ImagePath = "veg-15.jpeg",
                            ItemName = "Arugula",
                            Price = 3.49m,
                            Quantity = 1,
                            Unit = "Pack"
                        },
                        new
                        {
                            Id = 49,
                            CategoryId = 3,
                            ImagePath = "veg-16.jpeg",
                            ItemName = "Red Pepper",
                            Price = 3.19m,
                            Quantity = 1,
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 50,
                            CategoryId = 4,
                            ImagePath = "bakt-02.jpeg",
                            ItemName = "Polish Load",
                            Price = 3.99m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 51,
                            CategoryId = 4,
                            ImagePath = "bakt-03.jpeg",
                            ItemName = "Cinnamon Roll ",
                            Price = 1.29m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 52,
                            CategoryId = 4,
                            ImagePath = "bakt-04.jpeg",
                            ItemName = "Nut Butter Snack",
                            Price = 3.69m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 53,
                            CategoryId = 4,
                            ImagePath = "bakt-05.jpeg",
                            ItemName = "Loaf Bread",
                            Price = 2.99m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 54,
                            CategoryId = 4,
                            ImagePath = "bakt-06.jpeg",
                            ItemName = "Milk Loaf",
                            Price = 3.49m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 55,
                            CategoryId = 4,
                            ImagePath = "bakt-07.jpeg",
                            ItemName = "Choco Croissant",
                            Price = 2.29m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 56,
                            CategoryId = 4,
                            ImagePath = "bakt-08.jpeg",
                            ItemName = "Mini Chicken Pie",
                            Price = 6.99m,
                            Quantity = 1,
                            Unit = "Dozen"
                        },
                        new
                        {
                            Id = 57,
                            CategoryId = 4,
                            ImagePath = "bakt-09.jpeg",
                            ItemName = "Mini Muffin",
                            Price = 5.49m,
                            Quantity = 1,
                            Unit = "Dozen"
                        },
                        new
                        {
                            Id = 58,
                            CategoryId = 4,
                            ImagePath = "bakt-10.jpeg",
                            ItemName = "Choco Cookies",
                            Price = 1.89m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 59,
                            CategoryId = 4,
                            ImagePath = "bakt-11.jpeg",
                            ItemName = "Croissant",
                            Price = 2.49m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 60,
                            CategoryId = 4,
                            ImagePath = "bakt-12.jpeg",
                            ItemName = "Honey Muffin",
                            Price = 1.59m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 61,
                            CategoryId = 4,
                            ImagePath = "bakt-13.jpeg",
                            ItemName = "White Baguette",
                            Price = 3.49m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 62,
                            CategoryId = 4,
                            ImagePath = "bakt-14.jpeg",
                            ItemName = "Wheat Bread",
                            Price = 5.29m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 63,
                            CategoryId = 4,
                            ImagePath = "bakt-15.jpeg",
                            ItemName = "Multi Bread",
                            Price = 4.49m,
                            Quantity = 1,
                            Unit = "Unit"
                        },
                        new
                        {
                            Id = 64,
                            CategoryId = 4,
                            ImagePath = "bakt-16.jpeg",
                            ItemName = "Multi Baguette",
                            Price = 3.19m,
                            Quantity = 1,
                            Unit = "Unit"
                        });
                });

            modelBuilder.Entity("FreshGoods.Models.ItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ItemCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Fruits",
                            Slug = "fruits"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Meat",
                            Slug = "meat"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Vegetables",
                            Slug = "vegetables"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Bakery",
                            Slug = "bakery"
                        });
                });

            modelBuilder.Entity("FreshGoods.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Delivery")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("FinalPrice")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Paid")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Tax")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT");

                    b.Property<bool>("perpared")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FreshGoods.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("FreshGoods.Models.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("FreshGoods.Models.Order", b =>
                {
                    b.HasOne("FreshGoods.Models.ApplicationUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("FreshGoods.Models.OrderDetail", b =>
                {
                    b.HasOne("FreshGoods.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("FreshGoods.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("FreshGoods.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("FreshGoods.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FreshGoods.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("FreshGoods.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
